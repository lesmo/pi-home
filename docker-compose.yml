version: '2'
services:
  bluetooth-audio:
    build: ./bluetooth-audio
    restart: on-failure
    network_mode: host
    privileged: true
    labels:
      io.balena.features.dbus: 1
    volumes:
      - bluetoothcache:/var/cache/bluetooth
      - snapcast:/var/cache/snapcast
  airplay:
    build: ./airplay
    restart: on-failure
    network_mode: host
    privileged: true
    labels:
      io.balena.features.dbus: 1
    volumes:
      - snapcast:/var/cache/snapcast
  spotify:
    build: ./spotify
    restart: on-failure
    network_mode: host
    privileged: true
    volumes:
      - spotifycache:/var/cache/raspotify
      - snapcast:/var/cache/snapcast
  fleet-supervisor:
    build: ./fleet-supervisor
    restart: on-failure
    network_mode: host
    privileged: true
    ports:
      - 3000:3000
    labels:
      io.balena.features.supervisor-api: 1
  snapcast-server:
    build: 
      context: ./snapcast-server
      args:
        SNAPCAST_VERSION: 0.19.0
    restart: on-failure
    ports:
      - 1704:1704
      - 1705:1705
    volumes:
      - snapcast:/var/cache/snapcast
  snapcast-client:
    build: 
      context: ./snapcast-client
      args:
        SNAPCAST_VERSION: 0.19.0
    restart: on-failure 
    network_mode: host
    privileged: true
    volumes:
      - snapcast:/var/cache/snapcast
  samba:
    build:
      context: ./samba
    environment:
      NMBD: true
      PERMISSIONS: true
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139/tcp"
      - "445:445/tcp"
    tmpfs:
      - /tmp
    restart: on-failure
    mem_limit: 512m
    privileged: true
    network_mode: host
  upnp:
    build: ./upnp
    restart: on-failure 
    network_mode: host 
    ports:
      - 49494:49494
    volumes:
      - snapcast:/var/cache/snapcast
  lounge:
    build:
      context: the-lounge/
    ports:
      - '80:9000'
    network_mode: 'host'
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    environment:
      TZ: 'America/Chicago'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - './etc-pihole/:/etc/pihole/'
      - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
volumes:
  spotifycache:
  bluetoothcache:
  snapcast:
